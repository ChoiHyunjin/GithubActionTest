# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
#  push:
#  pull_request:
#    branches: [ "develop" ]
  pull_request:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  preset:
    runs-on: ubuntu-latest
    steps:
      - name: event info
        run: |
          echo "github: ${{ github }}"
          echo "ref: ${{ github.ref }}"
          echo "refName: ${{ github.ref_name }}"
          echo "head_ref: ${{ github.head_ref }}"
          echo "event: ${{ github.event_name }}"
          echo condition: '${{ github.head_ref }}' != ''
          echo "condition2: '${{ github.head_ref }}' != ''"
      # This workflow contains a single job called "build"

  check_tests:
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.head_ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      #      - name: Make cache folder
      #        run: |
      #          mkdir -p .yarn/cache
      #          mkdir -p .yarn/unplugged
      #
      #      - name: Cache Yarn Package
      #        uses: actions/cache@v3
      #        with:
      #          path: |
      #            .yarn/cache
      #            .yarn/unplugged
      #          key: yarn-v15-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      #          restore-keys: yarn-v15-${{ runner.os }}-

      - name: Node setup
        run: yarn install --immutable

      - run: cat src/index.js

      - name: Find type errors
        run: yarn type-check |& tee "ts-compile-output.log"

      - name: Lint ts and js cods
        run: yarn lint-check -f ./scripts/eslint-formatter.js |& tee "eslint-output.log"

      - name: Detect cyclic imports
        run: yarn import-check |& tee "cyclic-import-output.log"

      - name: Run danger
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn danger ci --verbose
