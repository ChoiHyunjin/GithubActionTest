# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
    push:
    pull_request:
      branches: [ "develop" ]
    pull_request_target:


# Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  preset:
    runs-on: ubuntu-latest
    steps:
      - name: event info
        run: |
          echo "github: ${{ github }}"
          echo "ref: ${{ github.ref }}"
          echo "refName: ${{ github.ref_name }}"
          echo "head_ref: ${{ github.head_ref }}"
          echo "event: ${{ github.event_name }}"
          echo condition: '${{ github.head_ref }}' != ''
          echo "condition2: '${{ github.head_ref }}' != ''"
      # This workflow contains a single job called "build"

  install_node_packages:
    runs-on: ubuntu-latest
    steps:
      - name: Restore Yarn Package Cache
        uses: actions/cache@v3
        with:
          path: |
            - .yarn/cache
            - .yarn/unplugged
          key: yarn-v15-{{ arch }}-{{ checksum "yarn.lock" }}

      - name: Install node dependencies
        run: yarn install --immutable

#      - name: Save Yarn Package Cache
#        uses: actions/cache@v3
#        with:
#          key: yarn-v15-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
#          path: |
#            - .yarn/cache
#            - .yarn/unplugged

  build:
    #    concurrency:
    #      group: ${{ github.workflow }}-${{ github.ref }}
    #      cancel-in-progress: true


    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: ${{ github.head_ref != '' }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #      - uses: actions/checkout@v3

      - name: Find type errors
        run: yarn type-check |& tee "ts-compile-output.log"

  check_type:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: ${{github.head_ref}} != ""

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Find type errors
        run: yarn type-check |& tee "ts-compile-output.log"

  check_lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Lint ts and js cods
        run: yarn lint-check -f ./scripts/eslint-formatter.js |& tee "eslint-output.log"

  check_import:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Detect cyclic imports
        run: yarn import-check |& tee "cyclic-import-output.log"

#  run_danger:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#    needs: [ lintCheck ]
#    steps:
#      - name: Run danger
#        run: yarn danger ci --verbose

